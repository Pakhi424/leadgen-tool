# -*- coding: utf-8 -*-
"""leadgen_tool

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ADT_hCvIrMfytY9qhZXizc499xT_qAHa
"""

# ================================
# STEP 1: Install dependencies
# ================================
!pip install validators

# ================================
# STEP 2: Import libraries
# ================================
import pandas as pd
import validators
from google.colab import files

# ================================
# STEP 3: Upload CSV file
# ================================
print("ðŸ“¤ Please upload your leads file (CSV)...")
uploaded = files.upload()

# Automatically detect filename
filename = list(uploaded.keys())[0]
print("âœ… Uploaded file:", filename)

# Read CSV into DataFrame
df = pd.read_csv(filename)
print("\nðŸ“Š Preview of uploaded leads file:")
print(df.head())

# ================================
# STEP 4: Data Cleaning Function
# ================================
def clean_leads(df):
    # Make a copy
    df = df.copy()

    # Standardize column names (lowercase, no spaces)
    df.columns = df.columns.str.strip().str.lower().str.replace(" ", "_")

    # Remove duplicates
    df = df.drop_duplicates()

    # Drop completely empty rows
    df = df.dropna(how="all")

    # Fill missing values (basic handling, can improve later)
    df = df.fillna("")

    return df

# Clean data
df = clean_leads(df)

# ================================
# STEP 5: Validate Emails & URLs
# ================================
def validate_email(email):
    return validators.email(email)

def validate_url(url):
    return validators.url(url)

# Add validation columns if email/website exists
if "email" in df.columns:
    df["valid_email"] = df["email"].apply(lambda x: bool(validate_email(x)))
else:
    df["valid_email"] = None

if "website" in df.columns:
    df["valid_website"] = df["website"].apply(lambda x: bool(validate_url(x)))
else:
    df["valid_website"] = None

# ================================
# STEP 6: Save Cleaned File
# ================================
output_file = "cleaned_leads.csv"
df.to_csv(output_file, index=False)

print("\nâœ… Cleaning & validation complete!")
print(f"ðŸ“‚ Cleaned file saved as: {output_file}")

# ================================
# STEP 7: Download the Clean File
# ================================
files.download(output_file)